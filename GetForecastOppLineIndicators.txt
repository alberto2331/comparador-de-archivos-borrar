ALTER   FUNCTION [dbo].[GetForecastOppLineIndicators] 
(
	@TenantIds NVARCHAR(255),
	@FiscalYearTypeId INT,
	@BudgetCycleTypeId INT,
	@PartnerIds NVARCHAR(255),    
	@CustomerIds NVARCHAR(255),    
    @EGIds NVARCHAR(255),  
    @ManagerIds NVARCHAR(255),  
	@CurrencyIds NVARCHAR(255),    
	@LosTypeIds NVARCHAR(255),
	@IndustryIds NVARCHAR(255), 
	@OfficeIds NVARCHAR(255),
    @CostCenterIds NVARCHAR(255),  
	@ProjectCode NVARCHAR(255),
	@CurrencyTypeSelector INT,
	@ActiveUserId INT,
    @CanViewUnrelatedForms BIT,
	@PPTForecastMonths INT,
	@OracleForecastMonths INT
) 
RETURNS TABLE
RETURN
WITH PPT AS (SELECT 
  	  [FormId],
      [OpportunityLineId],
	  OpportunityLineCode,
	  IntegrationId,
	  [BudgetCycleId],
      [TenantId],
      FormCurrencyCode,
	  ReportCurrencyCode,
	  FiscalYearId,
      [IsInDollars],
	  ManagerName,
	  PartnerName,
	  TenantName,
	  FormName,
	  CustomerDescription,
	  EconomicGroupDescription,
	  LosDescription,
	  SubLosDescription,
	  OfficeDescription,
	  CostCenterDescription,
	  FiscalYearDescription,
	  BudgetCycleDescription,
      SUM(TotalHoursPPT) TotalHoursPPT,
      SUM(MarketValuePPT) MarketValuePPT,
      SUM(HoursCostPPT) HoursCostPPT,
      SUM(IncludedExpendituresITCPPT) IncludedExpendituresITCPPT,
      SUM(TimeRevenuePPT) TimeRevenuePPT,
      SUM(IncludedExpendituresPPT) IncludedExpendituresPPT,
	  SUM(TotalHoursAdditional) TotalHoursAdditional,
      SUM(MarketValueAdditional) MarketValueAdditional,
      SUM(HoursCostAdditional)HoursCostAdditional,
      SUM(IncludedExpendituresITCAdditional) IncludedExpendituresITCAdditional,
      SUM(TimeRevenueAdditional) TimeRevenueAdditional,
      SUM(IncludedExpendituresAdditional) IncludedExpendituresAdditional,
	  SUM(NetRevenuePPT) NetRevenuePPT,
      SUM(NetRevenueAdditional) NetRevenueAdditional,
	  SUM(EMPPT) EMPPT,
	  SUM(EMAdditional) EMAdditional
  FROM [dbo].[GetMonthlyPPTIndicators] (
	  @TenantIds,
	  @FiscalYearTypeId,
	  @BudgetCycleTypeId,
	  null, -- DateFrom is null in Forecast report
	  null, -- DateTo is null in Forecast report
	  @PartnerIds,
	  @CustomerIds,
	  @EGIds,
	  @ManagerIds,
	  @CurrencyIds,
	  @LosTypeIds,
	  @IndustryIds,
	  @OfficeIds,
      @CostCenterIds, 
	  0, --IsPricing is always 0 in Forecast report
	  @CurrencyTypeSelector,
	  @ActiveUserId,
      @CanViewUnrelatedForms,
	  @PPTForecastMonths
  )
  Group by 
	  [FormId],
      [OpportunityLineId],
	  OpportunityLineCode,
	  IntegrationId,
	  [BudgetCycleId],
      [TenantId],
      FormCurrencyCode,
	  ReportCurrencyCode,
	  FiscalYearId,
      [IsInDollars],
	  ManagerName,
	  PartnerName,
	  TenantName,
	  FormName,
	  CustomerDescription,
	  EconomicGroupDescription,
	  LosDescription,
	  SubLosDescription,
	  OfficeDescription,
	  CostCenterDescription,
	  FiscalYearDescription,
	  BudgetCycleDescription
),
Ora as (SELECT 
	ProjectNumber,
	OpportunityLine,
	[TenantId],
	OracleCurrencyCode,
	ReportCurrencyCode,
	[IsInDollars],
	ManagerName,
	PartnerName,
	TenantName,
	CustomerDescription,
	EconomicGroupDescription,
	LosDescription,
	SubLosDescription,
	OfficeDescription,
	CostCenterDescription,
	SUM(TotalHoursOracle) as TotalHoursOracle,
	SUM(MarketValueOracle) as MarketValueOracle,
	SUM(HoursITCOracle) as HoursITCOracle,
	SUM(HoursCostOracle) as HoursCostOracle,
	SUM(BillingOracle) as BillingOracle,
	SUM(TimeRevenueOracle) as TimeRevenueOracle,
	SUM(NetRevenueOracle) as NetRevenueOracle,
	SUM(EngagementMarginOracle) as EMOracle,
	MAX(CASE WHEN DateOrder = 1 THEN DiscountPercentageOracle ELSE NULL END) as DiscountPercentageOracle,
	FiscalYearDescription
  FROM [dbo].[GetMonthlyOracleIndicators] (
	@TenantIds,
	null, -- DateFrom is null in Forecast report
	null, -- DateTo is null in Forecast report
	@PartnerIds,
	@CustomerIds,
	@EGIds,
	@ManagerIds,
	@CurrencyIds,
	@LosTypeIds,
	@IndustryIds,
	@OfficeIds,
    @CostCenterIds,
	@ProjectCode,
	@CurrencyTypeSelector,
	@ActiveUserId,
    @CanViewUnrelatedForms,
	@OracleForecastMonths,
	@FiscalYearTypeId
  )
  Group by 
	ProjectNumber,
	OpportunityLine,
	[TenantId],
	OracleCurrencyCode,
	ReportCurrencyCode,
	[IsInDollars],
	ManagerName,
	PartnerName,
	TenantName,
	CustomerDescription,
	EconomicGroupDescription,
	LosDescription,
	SubLosDescription,
	OfficeDescription,
	CostCenterDescription,
	FiscalYearDescription
)
SELECT CASE When formid is not null THEN PPT.TenantName ELSE Ora.TenantName END AS TenantName,
[FormId],
FormName,
ProjectNumber,
[OpportunityLineId],
OpportunityLineCode,
IntegrationId,
CASE When formid is not null THEN PPT.CustomerDescription ELSE Ora.CustomerDescription END AS CustomerDescription,
CASE When formid is not null THEN PPT.EconomicGroupDescription ELSE Ora.EconomicGroupDescription END AS EconomicGroupDescription,
CASE When formid is not null THEN PPT.ManagerName ELSE Ora.ManagerName END AS ManagerName,
CASE When formid is not null THEN PPT.PartnerName ELSE Ora.PartnerName END AS PartnerName,
CASE When formid is not null THEN PPT.LosDescription ELSE Ora.LosDescription END AS LosDescription,
CASE When formid is not null THEN PPT.SubLosDescription ELSE Ora.SubLosDescription END AS SubLosDescription,
CASE When formid is not null THEN PPT.OfficeDescription ELSE Ora.OfficeDescription END AS OfficeDescription,
CASE When formid is not null THEN PPT.CostCenterDescription ELSE Ora.CostCenterDescription END AS CostCenterDescription,
CASE When formid is not null THEN PPT.FiscalYearDescription ELSE Ora.FiscalYearDescription END AS FiscalYearDescription,
BudgetCycleDescription,
CASE When formid is not null THEN FormCurrencyCode ELSE OracleCurrencyCode END AS OriginCurrencyCode,
CASE When formid is not null THEN PPT.ReportCurrencyCode ELSE Ora.ReportCurrencyCode END AS ReportCurrencyCode,
CASE When formid is not null THEN PPT.[IsInDollars] ELSE Ora.[IsInDollars] END AS [IsInDollars],
COALESCE(TotalHoursOracle, 0) + COALESCE(HoursITCOracle, 0) + COALESCE(TotalHoursPPT, 0) as TotalHours,
TotalHoursAdditional,
COALESCE(MarketValuePPT, 0) + COALESCE(MarketValueOracle, 0) as MarketValue,
MarketValueAdditional,
COALESCE(HoursCostPPT, 0) + COALESCE(HoursCostOracle, 0) as HoursCost,
HoursCostAdditional,
COALESCE(TimeRevenuePPT, 0) + COALESCE(TimeRevenueOracle, 0) as TimeRevenue,
TimeRevenueAdditional,
COALESCE(NetRevenuePPT, 0) + COALESCE(NetRevenueOracle, 0) as NetRevenue,
NetRevenueAdditional,
COALESCE(EMPPT, 0) + COALESCE(EMOracle, 0) as EM,
EMAdditional,
dbo.GetEMPercentage(COALESCE(EMPPT, 0) + COALESCE(EMOracle, 0), COALESCE(NetRevenuePPT, 0) + COALESCE(NetRevenueOracle, 0)) as EMPercentage,
null as GroupingCol1,
null as GroupingCol2,
null as GroupingCol3
FROM PPT FULL JOIN Ora on Ora.opportunityline = PPT.integrationid
WHERE @ProjectCode is NULL OR ProjectNumber is not null
